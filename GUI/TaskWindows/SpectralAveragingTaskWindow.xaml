<Window x:Class="MetaMorpheusGUI.SpectralAveragingTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MetaMorpheusGUI"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:guiFunctions="clr-namespace:GuiFunctions;assembly=GuiFunctions"
        mc:Ignorable="d"
        Title="Spectral Averaging Task Window" 
        KeyDown="SpectralAveragingTaskWindow_OnKeyDown"
        Width="750" Height="750"  
        WindowStartupLocation="CenterScreen"
        d:DataContext="{x:Static guiFunctions:MzLibSpectralAveragingModel.Instance}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <!-- All Content that is not buttons -->
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <DockPanel>

                <!-- Upper region with name -->
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Label Content="Task Name" />
                    <TextBox x:Name="OutputFileNameTextBox" Width="150">
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Label Content="AveragingTask" Foreground="Gray" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                
                <!-- Averaging Parameters -->
                <GroupBox Header="Averaging Parameters" DockPanel.Dock="Top">
                    <Expander x:Name="averagingOptionsExpander">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <!-- Left side -->
                            <!-- Averaging Type, Type Specific Options, and Normalization -->
                            <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <!-- File Averaging Type -->
                                <GroupBox Header="File Averaging Type" Style="{StaticResource GroupBoxStyle}" >
                                    <ListBox ItemsSource="{Binding SpectraFileProcessingTypes}" SelectedItem="{Binding SpectraFileProcessingType}">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Template" >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <ContentPresenter />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton Content="{Binding Converter={local:DataStructureToStringConverter}}" Margin="20 0 0 0">
                                                    <RadioButton.IsChecked>
                                                        <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                                    </RadioButton.IsChecked>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>

                                <!-- File Averaging Specific Options -->
                                <GroupBox Header="File Type Specific Options" Style="{StaticResource GroupBoxStyle}" 
                                          Opacity="{Binding SpectraFileProcessingType, Converter={local:SpectraFileProcessingTypeToOpacityConverter}}">
                                    <ListBox>
                                        <StackPanel>
                                            <!-- Number of scans to average -->
                                            <StackPanel Style="{StaticResource ValueEnteringStackPanel}" Margin="1"
                                                        Opacity="{Binding SpectraFileProcessingType, Converter={local:SpectraFileProcessingTypeToNumberOpacityConverter}}">
                                                <Label Content="Number of Scans To Average" Width="220"
                                                       ToolTip="How many scans from the file should be averaged at a time" />
                                                <local:IntegerTextBox Text="{Binding NumberOfScansToAverage}" Style="{StaticResource TextBoxStyle}"
                                                        IsReadOnly="{Binding SpectraFileProcessingType, Converter={local:SpectraFileProcessingTypeToNumberToAverageReadOnlyConverter}}"/>
                                            </StackPanel>

                                            <!-- scan overlap -->
                                            <StackPanel Style="{StaticResource ValueEnteringStackPanel}" Margin="1" 
                                                        Opacity="{Binding SpectraFileProcessingType, Converter={local:SpectraFileProcessingTypeToOverlapOpacityConverter}}">
                                                <Label Content="Scan Overlap" Width="220"
                                                        ToolTip="Number of scans that should overlap while averaging" />
                                                <local:IntegerTextBox Text="{Binding ScanOverlap}" Style="{StaticResource TextBoxStyle}"
                                                        IsReadOnly="{Binding SpectraFileProcessingType, Converter={local:SpectraFileProcessingTypeToOverlapReadOnlyConverter}}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </ListBox>
                                </GroupBox>

                                <!-- Normalization -->
                                <GroupBox Header="Normalization" Style="{StaticResource GroupBoxStyle}">
                                    <CheckBox Content="Perform Normalization" Margin="20 0 0 0" 
                                              IsChecked="{Binding PerformNormalization}"/>
                                </GroupBox>
                            </StackPanel>

                            <!-- Right side -->
                            <!-- Outlier Rejection and Bin Weighting -->
                            <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <!-- Outlier Rejection -->
                                <GroupBox Header="Outlier Rejection" Style="{StaticResource GroupBoxStyle}">

                                    <ListBox ItemsSource="{Binding RejectionTypes}" SelectedItem="{Binding RejectionType}">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Template" >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <ContentPresenter />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton Content="{Binding Converter={local:DataStructureToStringConverter}}" Margin="20 0 0 0">
                                                    <RadioButton.IsChecked>
                                                        <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                                    </RadioButton.IsChecked>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>

                                <!-- Bin Weighting -->
                                <GroupBox Header="Bin Weighting" Style="{StaticResource GroupBoxStyle}">
                                    <ListBox ItemsSource="{Binding WeightingTypes}" SelectedItem="{Binding WeightingType}">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Template" >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <ContentPresenter />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton Content="{Binding Converter={local:DataStructureToStringConverter}}" Margin="20 0 0 0">
                                                    <RadioButton.IsChecked>
                                                        <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                                    </RadioButton.IsChecked>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>
                            </StackPanel>

                            <!-- Bottom -->
                            <!-- Text Fields -->
                            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <!-- Bin Size -->
                                    <StackPanel Style="{StaticResource ValueEnteringStackPanel}">
                                        <Label Content="Bin Size" Width="160" 
                                               ToolTip="Size of each bin in Thompson units"/>
                                        <local:DoubleTextBox Text="{Binding BinSize}" Style="{StaticResource TextBoxStyle}"/>
                                    </StackPanel>

                                    <!-- Percentile -->
                                    <StackPanel Style="{StaticResource ValueEnteringStackPanel}"
                                                Opacity="{Binding RejectionType, Converter={local:OutlierRejectionTypeToPercentileOpacityConverter}}">
                                        <Label Content="Percentile" Width="160"
                                               ToolTip="Distance away from the mean in percentile units before the point is rejected as an outlier in Percentile Clipping"/>
                                        <local:DoubleTextBox Text="{Binding Percentile}" Style="{StaticResource TextBoxStyle}" 
                                                             IsReadOnly="{Binding RejectionType, Converter={local:OutlierRejectionTypeToPercentileReadOnlyConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Column="1"  >
                                    <!-- Min Sigma Value -->
                                    <StackPanel Style="{StaticResource ValueEnteringStackPanel}"
                                                Opacity="{Binding RejectionType, Converter={local:OutlierRejectionTypeToSigmaOpacityConverter}}">
                                        <Label Content="Minimum Sigma Value" Width="160"
                                               ToolTip="Minimum distance in standard deviation units allowed before the point is rejected as an outlier"/>
                                        <local:DoubleTextBox Text="{Binding MinSigmaVale}" Style="{StaticResource TextBoxStyle}"
                                                             IsReadOnly="{Binding RejectionType, Converter={local:OutlierRejectionTypeToSigmaReadOnlyConverter}}"/>
                                    </StackPanel>

                                    <!-- Max Sigma Value -->
                                    <StackPanel Style="{StaticResource ValueEnteringStackPanel}"
                                                Opacity="{Binding RejectionType, Converter={local:OutlierRejectionTypeToSigmaOpacityConverter}}">
                                        <Label Content="Maximum Sigma Value" Width="160" 
                                               ToolTip="Maximum distance in standard deviation units allowed before the point is rejected as an outlier"/>
                                        <local:DoubleTextBox Text="{Binding MaxSigmaValue}" Style="{StaticResource TextBoxStyle}"
                                                             IsReadOnly="{Binding RejectionType, Converter={local:OutlierRejectionTypeToSigmaReadOnlyConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Expander>
                </GroupBox>

                <!-- Output Parameters -->
                <GroupBox Header="Output Options">
                    <Expander x:Name="outputOptionsExpander">
                        <StackPanel>

                            <!-- Output Options -->
                            <GroupBox Header="Output Options" Style="{StaticResource GroupBoxStyle}">
                                <ListBox ItemsSource="{Binding OutputTypes}" SelectedItem="{Binding OutputType}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Template" >
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <ContentPresenter />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <RadioButton Content="{Binding Converter={local:DataStructureToStringConverter}}" Margin="20 0 0 0">
                                                <RadioButton.IsChecked>
                                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                                </RadioButton.IsChecked>
                                            </RadioButton>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </GroupBox>
                        </StackPanel>
                    </Expander>
                </GroupBox>
            </DockPanel>
        </ScrollViewer>

        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1" Margin="5">
            <Button x:Name="CancelButton" Content="Cancel" Click="CancelButton_OnClick" />
            <Button x:Name="SaveButton" Content="Save Averaging Task" Click="SaveButton_OnClick"  FontSize="24" />
            <Button x:Name="SetDefaultbutton" Click="SetDefaultbutton_OnClick"  Width="100" >
                <TextBlock Text="Save As Default" TextWrapping="Wrap" TextAlignment="Center"/>
                <ToolTipService.ToolTip>
                    <ToolTip Content="Save these parameters as the default. MetaMorpheus can return to original defaults by deleting the folder 'DefaultParameters'" ToolTipService.ShowDuration="999999" ToolTipService.InitialShowDelay="500" />
                </ToolTipService.ToolTip>
            </Button>
        </StackPanel>

    </Grid>
</Window>
