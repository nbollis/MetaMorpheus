using System.IO;
using System.Linq;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TaskLayer;

namespace GuiFunctions
{
    public class TaskResults
    {
        
        private string resultsFilePath;
        private string autoGeneratedManuscriptProsePath;
        private string taskTomlPath;

        private string resultsText;
        private string autoGeneratedManuscriptProse;

        public string ResultsText => resultsText ??= File.ReadAllText(resultsFilePath);
        public string ManuscriptProse =>
            autoGeneratedManuscriptProse ??= File.ReadAllText(autoGeneratedManuscriptProsePath);
        public MyTask TaskType { get; }

        public TaskResults(string taskDirectory)
        {
            var files = Directory.GetFiles(taskDirectory);
            resultsFilePath = files.First(p => p.Contains("results.txt"));
            autoGeneratedManuscriptProsePath = files.First(p => p.Contains("AutoGenerated"));
            var taskTypeString = taskDirectory.Split("\\").Last().Split("-").Last();
            var settingsDirectory = Directory.GetParent(taskDirectory)?.GetDirectories().First(p => p.Name.Contains("Task Settings"));
            taskTomlPath = settingsDirectory.GetFiles().First(p => p.Name.Contains(taskTypeString)).FullName;

            switch (taskTypeString)
            {
                case "CalibrateTask":
                    TaskType = MyTask.Calibrate;
                    break;

                case "AveragingTask":
                    
                    break;

                case "GPTMDTask":
                    TaskType = MyTask.Gptmd;
                    break;

                case "SearchTask":
                    TaskType = MyTask.Search;
                    break;
            }
        }
    }
}
